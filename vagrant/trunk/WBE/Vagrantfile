# -*- mode: ruby -*-
# vi: set ft=ruby :

wsdlDir = "C:\\Development\\projects\\wsdl-classgen"
traceDir = "C:\\Development\\projects\\trace\\wbe"
projectDir = "C:\\Development\\projects\\wbe"
dirPuppet = "C:\\Development\\projects\\PeakWeb\\tools\\puppet\\trunk"
ipAddress = "10.0.0.10"
projectName = "web-booking-engine"


Vagrant.configure("2") do |config|

  # Setup the base virtual machine
  config.vm.box = "#{projectName}"
  config.vm.box_url = "http://packages.vstone.eu/vagrant-boxes/centos/6.3/centos-6.3-64bit-puppet-vbox.4.2.4.box"
  #config.vm.box_url = "\\\\aumelprdfs01\\ITPL$\\IT\\011 Webmaster\\Intrepid Dev DB Backups\\centos-6.3-64bit-puppet-vbox.4.2.4.box"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui
  config.vm.hostname = "#{projectName}"

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :private_network, ip: "#{ipAddress}" 

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.
  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  # config.vm.forward_port 80, 8080

  config.vm.provider :virtualbox do |vbox| 
        # Boot Virtualbox VM with a GUI
        #vbox.gui = true

        # VBoxManage - allocate physical RAM
        vbox.customize ["modifyvm", :id, "--memory", "3072"]
        
        # VBoxManage - share RAM allocation with other VMs
        vbox.customize ["modifyvm", :id, "--guestmemoryballoon", "1024"]

        # Allow the Guest access to this many CPU cores
        vbox.customize ["modifyvm", :id, "--cpus", "8"]

        # Cap the Host CPU utilization
        vbox.customize ["controlvm", :id, "cpuexecutioncap", "70"]
        
        # Enables the use of hardware virtualization extensions (Intel VT-x) 
        # @see http://ark.intel.com/Products/VirtualizationTechnology
        vbox.customize ["modifyvm", :id, "--hwvirtex", "on"]
  end
  
  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.synced_folder traceDir, "/var/trace/wbe",
    :create => true, :extra => 'dmode=775,fmode=664'
  config.vm.synced_folder projectDir, "/opt/projects/peak_WebEngine",
    :create => true, :extra => 'dmode=775,fmode=664'
  config.vm.synced_folder wsdlDir, "/opt/projects/wsdl-classgen",
    :create => true, :extra => 'dmode=775,fmode=664'
    
  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  # You will need to create the manifests directory and a manifest in
  # the file base.pp in the manifests_path directory. 
  config.vm.provision :puppet do |puppet| 
      puppet.manifests_path = "#{dirPuppet}/manifests"
      puppet.module_path = "#{dirPuppet}/modules"
      puppet.manifest_file = "#{projectName}.pp" 
      # puppet.manifest_file = "blank.pp" 
      puppet.options = [ 
          '--verbose', 
          #'--debug', 
      ] 
  end
end