# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|

  # Setup the base virtual machine
  config.vm.box = "centos-6.3-64bit"
  config.vm.box_url = "http://packages.vstone.eu/vagrant-boxes/centos/6.3/centos-6.3-64bit-puppet-vbox.4.2.4.box"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :hostonly, "10.0.0.13"
  config.vm.host_name = "peregrine-d6.vmlocal"

  # VBoxManage - allocate physical RAM
  config.vm.customize ["modifyvm", :id, "--memory", 3072]

  # VBoxManage - share RAM allocation with other VMs
  #config.vm.customize ["modifyvm", :id, "--guestmemoryballoon", 1024]

  # ControlVM - Cap the Host CPU utilization
  config.vm.customize ["controlvm", :id, "cpuexecutioncap", 70]

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.
  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  config.vm.forward_port 80, 8080

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.share_folder "/opt/projects/peregrine-d6", "/opt/projects/peregrine-d6", "C:\\development\\projects\\peregrine-d6", 
    :owner => 'vagrant', :group => 'vagrant', :create => true, :extra => 'dmode=775,fmode=664'
  config.vm.share_folder "/var/trace/peregrine", "/var/trace/peregrine", "C:\\development\\projects\\trace\\peregrine", 
    :owner => 'vagrant', :group => 'vagrant', :create => true, :extra => 'dmode=775,fmode=664'

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  # You will need to create the manifests directory and a manifest in
  # the file base.pp in the manifests_path directory. 
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "C:\\development\\PeakWeb\\tools\\puppet\\trunk\\manifests"
    puppet.module_path = "C:\\development\\PeakWeb\\tools\\puppet\\trunk\\modules"
    puppet.manifest_file  = "peregrine-d6.pp"
    puppet.options = [
      '--verbose',
      # '--debug',
    ]
  end

end
