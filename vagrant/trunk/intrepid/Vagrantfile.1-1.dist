# -*- mode: ruby -*-
# vi: set ft=ruby :
 dirPuppet = "C:\\development\\PeakWeb\\tools\\puppet\\trunk"
  traceDir = "C:\\development\\projects\\trace\\intrepid"
projectDir = "C:\\development\\projects\\intrepidtravel\\trunk"


Vagrant.configure("2") do |config|

  # Setup the base virtual machine
  config.vm.box = "intrepidtravel"
  config.vm.box_url = "http://packages.vstone.eu/vagrant-boxes/centos/6.3/centos-6.3-64bit-puppet-vbox.4.2.4.box"
  config.vm.hostname = "intrepidtravel"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :private_network, ip: "10.0.0.11"

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.
  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  # config.vm.forward_port 80, 8081

  config.vm.provider :virtualbox do |vbox| 
    # Boot Virtualbox VM with a GUI
    #vbox.gui = true

    # VBoxManage - allocate physical RAM
    vbox.customize ["modifyvm", :id, "--memory", "3072"]
    # VBoxManage - share RAM allocation with other VMs
    vbox.customize ["modifyvm", :id, "--guestmemoryballoon", "1024"]

    # Cap the Host CPU utilization
    vbox.customize ["controlvm", :id, "cpuexecutioncap", "70"]

  end
  
  # The first parameter is a path to a directory on the host machine. If the path is 
  # relative, it is relative to the project root. The second parameter must be an absolute 
  # path of where to share the folder within the guest machine. This folder will be 
  # created (recursively, if it must) if it doesn't exist.
  config.vm.synced_folder traceDir, "/var/trace/intrepid",
    :create => true, :extra => 'dmode=775,fmode=664'
  config.vm.synced_folder projectDir, "/opt/projects/intrepidtravel.local",
    :create => true, :extra => 'dmode=775,fmode=664'


  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  # You will need to create the manifests directory and a manifest in
  # the file base.pp in the manifests_path directory. 
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "#{dirPuppet}\\manifests"
    puppet.module_path    = "#{dirPuppet}\\modules"
    puppet.manifest_file  = "intrepid.pp"
    puppet.options = [
      '--verbose',
      # --debug",
    ]
  end

end
